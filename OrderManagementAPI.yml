openapi: 3.0.1
info:
  title: Order Management API
  description: Secured Order Management API with CRUD operation making use of OAuth for authorization.
  version: 1.0.0
servers:
- url: http://localhost:9090/api/v1/orders
paths:
  /:
    get:
      tags:
      - Order Management V1
      summary: Get all the Order Details in List.
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully Fetched the Order Details Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDetails'
        400:
          description: Validation warnings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages_for_status_code_400'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages_for_status_code_500'
                
    post:
      tags:
      - Order Management V1
      summary: Add a new  Order Details in system.
      security:
        - bearerAuth: []      
      requestBody:
        description: The Order Details that need to be created.
        content:
          application/json:
            schema:
              required:
              - referenceNumber
              - totalPrice
              - status
              type: object
              properties:
                referenceNumber:
                  pattern: ^[A-Za-z0-9]*$
                  type: string
                  example: OrderIDReference1
                totalPrice:
                  pattern: ^\d{0,3}(.\d{2})?$
                  type: number
                  description: Total Price for orders.
                  example: 122.57
                status:
                  enum: [PLACED, DELAYED,CANCELLED,IN_TRANSIT,DELIVERED,REQUEST_RETURN]
                  type: string
                  description: Status for order.     
        required: true      
      responses:
        201:
          description: Successfully Created new Order in system.
                
        400:
          description: Validation warnings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages_for_status_code_400'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages_for_status_code_500'
                
  /v1/orders/{orderId}:
    get:
      tags:
      - Order Management V1
      summary: Retrieves a order details for the provided order id.
      parameters:
      - name: orderId
        in: path
        description: Unique ID of an Order.
        required: true
        schema:
          pattern: '[0-9]+'
          minimum: 6
          type: number
          example: "9"
      security:
        - bearerAuth: []          
      responses:
        200:
          description: Successfully Fetched the Order Detail for the provided order id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDetail'
        400:
          description: Validation warnings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages_for_status_code_400'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages_for_status_code_500'
                
          
    delete:
      tags:
      - Order Management V1
      summary: "Rest operation used to Cancel/Delete the individual order based on provided orderId.This will change the status of order to CANCEL."
      parameters:
      - name: orderId
        in: path
        description: Unique ID of an Order.
        required: true
        schema:
          pattern: '[0-9]+'
          minimum: 6
          type: number
          example: "9"
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDetail' 
  
  /v1/orders/{orderId}/status/{status}:                
    put:
      tags:
      - Order Management V1
      summary: "Rest operation used to update an individual order status based on provided orderId and status.\n Possible values of status can be CANCELLED,IN_TRANSIT,DELIVERED or DELAYED."
      parameters:
      - name: orderId
        in: path
        description: Unique ID of an Order.
        required: true
        schema:
          pattern: '[0-9]+'
          minimum: 6
          type: number
          example: "9"
      - name: status
        in: path
        description: Status for order. 
        required: true
        schema:
          enum: [PLACED, DELAYED,CANCELLED,IN_TRANSIT,DELIVERED,REQUEST_RETURN]
          type: string
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDetail'          
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      
      
  schemas:
    orderDetails:
      type: array
      items:
        $ref: '#/components/schemas/orderDetail'
      description: List of Order Details
      
    orderDetail:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        referenceNumber:
          $ref: '#/components/schemas/referenceNumber'
        totalPrice:
          $ref: '#/components/schemas/totalPrice' 
        status:
          $ref: '#/components/schemas/status' 
        lastUpdate:
          $ref: '#/components/schemas/lastUpdate'           
      description: Order Details Rest Resoure.
      
    id:
      pattern: '[0-9]+'
      type: number
      description: Unique ID of an Order.
    referenceNumber:
      pattern: ^[A-Za-z0-9]*$
      type: string
      description: ReferenceNumber of an Order.      
    totalPrice:
      pattern: ^\d{0,3}(.\d{2})?$
      type: number
      description: Toatl Price of an Order.
    status:
      pattern: ^\d{0,3}(.\d{2})?$
      type: string
      description: Status of an Order.
    lastUpdate:
      type: string
      description: Date when the Order was last updated.      
      
    Messages_for_status_code_500:
      title: Messages_for_status_code_500
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp when the error occured
          example: 2020-11-25T13:29:38.496+0000
        status:
          type: number
          description: The type of the message
          example: 500
        error:
          type: string
          description: The error text.
          example: Internal Server Error
        message:
          type: string
          description: The error message with some explanation why the error occured
          example: Parsing error.
        path:
          type: string
          description: The API endpoint for which the error occured
          example: /api/v1/orders/13
      description: The following ERROR messages can occur for status code 500

    Messages_for_status_code_400:
      title: Messages_for_status_code_400
      type: object
      properties:
        timestamp:
          type: string
          description: The timestamp when the error occured
          example: 2020-11-25T13:29:38.496+0000
        status:
          type: number
          description: The type of the message
          example: 400
        error:
          type: string
          description: The error text.
          example: Bad Request
        message:
          type: string
          description: The error message with some explanation why the error occured
          example: Order Not Found.
        path:
          type: string
          description: The API endpoint for which the error occured
          example: /api/v1/orders/13
      description: The following ERROR messages can occur for status code 400